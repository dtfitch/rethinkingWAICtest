start = list(sigma_school=1, a=0, aj=rep(0,11)),
iter=1500, warmup=500, chains=1
)
m2<- map2stan(
alist(
Rack_Count ~ dbinom(Enrollment,p),
logit(p) ~ a + aj[School_ID] + bRain*Rain ,
aj[School_ID] ~ dnorm(0,sigma_school),
a ~ dnorm(0,10),
bRain ~ dnorm(0,10),
sigma_school ~ dcauchy(0,1)
),
data = d,
start = list(sigma_school=1, a=0, aj=rep(0,11), bRain=0),
iter=1500, warmup=500, chains=1
)
m1
m2
compare(m1,m2)
m1c <- map2stan(
alist(
Rack_Count ~ dbinom(Enrollment,p),
logit(p) ~ a + aj[School_ID] ,
aj[School_ID] ~ dnorm(0,sigma_school),
a ~ dnorm(0,10),
sigma_school ~ dcauchy(0,1)
),
data = d,
start = list(sigma_school=1, a=0, aj=rep(0,11)),
iter=2, warmup=1, chains=1
)
m1.1 <- resample(m1c,iter=1000,warmup=500,chains=1)
m2c<- map2stan(
alist(
Rack_Count ~ dbinom(Enrollment,p),
logit(p) ~ a + aj[School_ID] + bRain*Rain ,
aj[School_ID] ~ dnorm(0,sigma_school),
a ~ dnorm(0,10),
bRain ~ dnorm(0,10),
sigma_school ~ dcauchy(0,1)
),
data = d,
start = list(sigma_school=1, a=0, aj=rep(0,11), bRain=0),
iter=2, warmup=1, chains=1
)
m2.1 <- resample(m2c,iter=1000,warmup=500,chains=1)
m1.1
m2.1
compare(m1.1,m2.1)
precis(m1.1)
precis(m1)
setwd("C:\\Users\\Dillon\\Box Sync\\GitHub\\DavisBiketoSchool")
d <- read.csv('bike_data.csv')
head(d)
logit <- function(x) log(x/(1-x))
n <- 100
# Person ID
ID <- rep(1:n, each=6)
ID2 <- ID
# Item ID
Item <- rep(1:6, times=n)
#Factor (factor 1 = 1, factor 2 = 2)
Factor <- rep(1:2, times=n, each=3)
# Factor dummy
Factor1Dum <- rep(c(1,0), times=n, each=3)
Factor2Dum <- rep(c(0,1), times=n, each=3)
# Loadings (item 1:6 loadings)
Load1 = rep(c(1,1,5,0,0,0),times=n)
Load2 = rep(c(0,0,0,2,1,1),times=n)
#Factor scores
FactorScores <-  rep(c(rbind(rnorm(n,1,.1),rnorm(n,2,.1))),each=3)
# Potential covariate for later
Male <- rep(rbinom(n,1,.5), each=6)
# Create Scores
Score <- rep(NA,length(ID))
# generate phi and scores
for (i in 1:length(ID)){
phi = Load1[i]*FactorScores[i] + Load2[i]*FactorScores[i]
Score[i] = rordlogit(1,phi,1:4)
}
# Make sure scores by item look correct
table(Score,Item, Factor)
dens(Score)
plot(table(Score,Item,Factor))
plot(table(Score,Item))
plot(table(Score,Item,Factor)[1])
str(table(Score,Item,Factor))
plot(table(Score,Item,Factor)[,,1])
table(Score,Item,Factor)[,,1]
table(Score,Item,Factor)[,,2]
hist(table(Score,Item,Factor)[,,1])
table(Score,Item,Factor)[,,1]
bar(table(Score,Item,Factor)[,,1])
barplot(table(Score,Item,Factor)[,,1])
barplot(table(Score,Item,Factor)[,,2])
pr_k <- table( Score ) / length(Score)
cum_pr_k <- cumsum( pr_k )
log(cum_pr_k/(1-cum_pr_k))
m.int_comp <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- 0,
cutpoints ~ dnorm(0,10)
),
data=list(Score=Score,Item=Item,Factor=Factor,ID=ID,ID2=ID2,Factor1Dum=Factor1Dum,
Factor2Dum=Factor2Dum),
start=list(cutpoints=c(-2,-1.7,-1.5,-1.4)),
iter=2, warmup=1
)
m.int <- resample(m.int_comp,iter=1000,warmup=300)
precis(m.int,depth=2)
m.LV_comp <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID]*Factor1Dum +
Loading[Item]*Attitude2[ID]*Factor2Dum,
Loading[Item] ~ dnorm(0,2),
Attitude1[ID] ~ dnorm(0,sigma1),
Attitude2[ID] ~ dnorm(0,sigma2),
sigma1 ~ dcauchy(0,1),
sigma2 ~ dcauchy(0,1),
cutpoints ~ dnorm(0,10)
),
data=list(Score=Score,Item=Item,Factor=Factor,ID=ID,Factor1Dum=Factor1Dum,
Factor2Dum=Factor2Dum),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2, warmup=1
)
m.LV <- resample(m.LV_comp,iter=5000,warmup=500)
plot(precis(m.LV,depth=2))
precis(m.LV)
precis(m.LV,depth=2)
Score
Item
Factor
ID
Factor
Factor1Dum
Factor2Dum
m.LV1c <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID]*Factor1Dum,
Loading[Item] ~ dnorm(0,2),
Attitude1[ID] ~ dnorm(0,sigma1),
sigma1 ~ dcauchy(0,1),
cutpoints ~ dnorm(0,10)
),
data=list(Score=Score,Item=Item,ID=ID,Factor1Dum=Factor1Dum),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2, warmup=1
)
m.LV1 <- resample(m.LV1c,iter=2000,warmup=500)
plot(precis(m.LV1))
plot(precis(m.LV1,depth=2))
m.LV1 <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID]*Factor1Dum,
Loading[Item] ~ dnorm(0,.5),
Attitude1[ID] ~ dnorm(0,sigma1),
sigma1 ~ dcauchy(0,1),
cutpoints ~ dnorm(0,10)
),
data=list(Score=Score,Item=Item,ID=ID,Factor1Dum=Factor1Dum),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2000, warmup=500
)
plot(precis(m.Lv1))
plot(precis(m.LV1))
plot(precis(m.LV1,depth=2))
FactorScores
plot(FactorScores)
precis(m.LV1)
n <- 100
ID <- rep(1:n, each=3)
Item <- rep(1:3, times=n)
Factor <- rep(1, times=n, each=3)
Load1 = rep(c(1,1,5),times=n)
FactorScores <-  rep(c(rbind(rnorm(n,1,.1))),each=3)
Score <- rep(NA,length(ID))
# generate phi and scores
for (i in 1:length(ID)){
phi = Load1[i]*FactorScores[i]
Score[i] = rordlogit(1,phi,1:4)
}
Score
ID
Item
Factor
Load1
FactorScores
plot(FactorScore)
plot(FactorScores)
m.LV1 <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID],
Loading[Item] ~ dnorm(0,.5),
Attitude1[ID] ~ dnorm(0,sigma1),
sigma1 ~ dcauchy(0,.5),
cutpoints ~ dnorm(0,10)
),
data=list(Score=Score,Item=Item,ID=ID),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2000, warmup=500
)
plot(precis(m.LV1)
)
plot(precis(m.LV1,depth=2))
m.LV1 <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID],
Loading[Item] ~ dnorm(0,.5),
Attitude1[ID] ~ dnorm(0,sigma1),
sigma1 ~ dcauchy(0,.5),
cutpoints ~ dnorm(0,1)
),
data=list(Score=Score,Item=Item,ID=ID),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2000, warmup=500
)
plot(precis(m.LV1,depth=2))
rcauchy,0,1
rcauchy(0,1)
plot(rcauchy(1000,0,1))
dens(rcauchy(1000,0,1))
dens(rcauchy(1000,0,1),xlim=c(-10,10))
dens(rcauchy(1000,0,1),xlim=c(-10,10))
dens(rcauchy(1000,0,1),xlim=c(-100,100))
dens(rcauchy(1000,0,1))
dens(rcauchy(1000,0,1),xlim=c(-100,100))
dens(rcauchy(1000,0,1),xlim=c(-10,10))
dens(rcauchy(1000,0,1),xlim=c(-10,10))
dens(rcauchy(1000,0,1),xlim=c(-100,100))
dens(rcauchy(1000,0,1),xlim=c(-20,20))
dens(rcauchy(1000,0,1),xlim=c(-20,20))
dens(rcauchy(1000,0,1),xlim=c(-20,20))
dens(rcauchy(1000,0,1),xlim=c(-20,20))
dens(rcauchy(100000,0,1),xlim=c(-20,20))
dens(rcauchy(100000,0,1),xlim=c(-20,20))
dens(rcauchy(100000,0,1),xlim=c(-100,100))
dens(rcauchy(100000,0,1),xlim=c(-100,100))
dens(rcauchy(1000,0,1))
dens(rcauchy(10000,0,1))
dens(rcauchy(100000,0,1))
dens(rcauchy(100000,0,.25))
dens(rcauchy(100,0,.25))
dens(rcauchy(1000,0,.25))
dens(rcauchy(1000,0,.25),xlim=c(-10,10))
dens(rcauchy(1000,0,.1),xlim=c(-10,10))
m.LV1 <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID],
Loading[Item] ~ dnorm(0,.5),
Attitude1[ID] ~ dnorm(0,sigma1),
sigma1 ~ dcauchy(0,.1),
cutpoints ~ dnorm(0,1)
),
data=list(Score=Score,Item=Item,ID=ID),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2000, warmup=500
)
plot(precis(m.LV1,depth=2))
n <- 100
# Person ID
ID <- rep(1:n, each=6)
ID2 <- ID
# Item ID
Item <- rep(1:6, times=n)
#Factor (factor 1 = 1, factor 2 = 2)
Factor <- rep(1:2, times=n, each=3)
# Factor dummy
Factor1Dum <- rep(c(1,0), times=n, each=3)
Factor2Dum <- rep(c(0,1), times=n, each=3)
# Loadings (item 1:6 loadings)
Load1 = rep(c(1,1,5,0,0,0),times=n)
Load2 = rep(c(0,0,0,2,1,1),times=n)
#Factor scores
FactorScores <-  rep(c(rbind(rnorm(n,1,.1),rnorm(n,2,.1))),each=3)
# Potential covariate for later
Male <- rep(rbinom(n,1,.5), each=6)
# Create Scores
Score <- rep(NA,length(ID))
# generate phi and scores
for (i in 1:length(ID)){
phi = Load1[i]*FactorScores[i] + Load2[i]*FactorScores[i]
Score[i] = rordlogit(1,phi,1:4)
}
# Make sure scores by item look correct
table(Score,Item, Factor)
# Plot Factor 1 Item loadings
barplot(table(Score,Item,Factor)[,,1])
# Plot Factor 2 Item loadings
barplot(table(Score,Item,Factor)[,,2])
# discrete proportion of each response value
pr_k <- table( Score ) / length(Score)
# cumsum converts to cumulative proportions
cum_pr_k <- cumsum( pr_k )
# plot
log(cum_pr_k/(1-cum_pr_k))
m.LV2c <- map2stan(
alist(
Score ~ dordlogit(phi, cutpoints),
phi <- Loading[Item]*Attitude1[ID]*Factor1Dum +
Loading[Item]*Attitude2[ID]*Factor2Dum,
Loading[Item] ~ dnorm(0,2),
Attitude1[ID] ~ dnorm(0,sigma1),
Attitude2[ID] ~ dnorm(0,sigma2),
sigma1 ~ dcauchy(0,.5),
sigma2 ~ dcauchy(0,.5),
cutpoints ~ dnorm(0,5)
),
data=list(Score=Score,Item=Item,ID=ID,Factor1Dum=Factor1Dum,
Factor2Dum=Factor2Dum),
start=list(cutpoints=c(-1,-.2,.4,1)),
iter=2, warmup=1
)
m.LV2 <- resample(m.LV2c,iter=2000,warmup=500)
plot(precis(m.LV,depth=2))
sim(m.LV2)
atts <- coef(m.LV)[7:106]
dens(logistic(atts))
plot(precis(m.LV2,depth=2))
atts <- coef(m.LV2)[7:106]
dens(logistic(atts))
post <- extract.samples(m.LV2)
dens(post$Loading[,1],xlim=c(-6,6))
dens(post$Loading[,2],add=TRUE)
dens(post$Loading[,3],add=TRUE)
dens(post$Loading[,4],add=TRUE,col="blue")
dens(post$Loading[,5],add=TRUE,col="blue")
dens(post$Loading[,6],add=TRUE,col="blue")
str(post)
m.LV2$coef
str(m.LV2)
m.LV2@coef
str(m.LV2@coef)
cutpoints <- m.LV2@coef[1:4]
p.cutpoints <- m.LV2@coef[1:4]
p.cutpoints
p.loadings <- m.LV2@coef[5:10]
p.loadings
p.Att1 <- m.LV2@coef[11:89]
p.Att1
p.Att1 <- m.LV2@coef[11:111]
p.Att1
p.Att2 <- m.LV2@coef[111:212]
p.At2
p.Att2
p.Att2 <- m.LV2@coef[111:210]
p.Att2
p.loadings1*p.Att1
p.loadings1 <- m.LV2@coef[5:7]
p.loadings2 <- m.LV2@coef[8:10]
p.Att1 <- m.LV2@coef[11:110]
p.Att2 <- m.LV2@coef[111:210]
p.loadings1*p.Att1
p.score <- rep(NA,length(ID))
for (i in 1:length(ID)){
for (k in 1:3){
phi = p.load1[k]*p.Att1[i] + p.load2[k]*p.Att2[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
}
p.load1 <- m.LV2@coef[5:7]
p.load2 <- m.LV2@coef[8:10]
p.Att1 <- m.LV2@coef[11:110]
p.Att2 <- m.LV2@coef[111:210]
p.score <- rep(NA,length(ID))
for (i in 1:length(ID)){
for (k in 1:3){
phi = p.load1[k]*p.Att1[i] + p.load2[k]*p.Att2[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
}
i
k
length(ID)
str(Score)
n
p.load1 <- repeat(m.LV2@coef[5:7],times=n)
m.LV2@coef[5:7]
p.load1 <- repeat(unlist(m.LV2@coef[5:7]),times=n)
unname(m.LV2@coef[5:7])
p.load1 <- repeat(unname(m.LV2@coef[5:7]),times=n)
p.load1 <- rep(unname(m.LV2@coef[5:7]),times=n)
p.load1
p.load2 <- rep(m.LV2@coef[8:10],times=n)
p.load2
p.cutpoints <- unname(m.LV2@coef[1:4])
p.load1 <- rep(unname(m.LV2@coef[5:7]),times=n)
p.load2 <- rep(unname(m.LV2@coef[8:10]),times=n)
p.Att1 <- unname(m.LV2@coef[11:110])
p.Att2 <- unname(m.LV2@coef[111:210])
p.score <- rep(NA,length(ID))
for (i in 1:100){
phi = p.load1[i]*p.Att1[i] + p.load2[i]*p.Att2[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
p.score
length(p.load1)
c(unname(m.LV2@coef[5:7]),0,0)
p.load1 <- rep(c(unname(m.LV2@coef[5:7]),0,0,0),times=n)
length(p.load1)
p.Att <- rep(c(rbind(unname(m.LV2@coef[11:110]),unname(m.LV2@coef[111:210]))),each=3)
p.Att
plot(p.Att)
p.cutpoints <- unname(m.LV2@coef[1:4])
p.load1 <- rep(c(unname(m.LV2@coef[5:7]),0,0,0),times=n)
p.load2 <- rep(c(0,0,0,unname(m.LV2@coef[8:10])),times=n)
p.Att <- rep(c(rbind(unname(m.LV2@coef[11:110]),unname(m.LV2@coef[111:210]))),each=3)
# Create Scores
p.score <- rep(NA,length(ID))
for (i in 1:100){
phi = p.load1[i]*p.Att[i] + p.load2[i]*p.Att[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
p.scores
p.score
for (i in 1:length(ID)){
phi = p.load1[i]*p.Att[i] + p.load2[i]*p.Att[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
p.score <- rep(NA,length(ID))
for (i in 1:length(ID)){
phi = p.load1[i]*p.Att[i] + p.load2[i]*p.Att[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
)
p.score <- rep(NA,length(ID))
for (i in 1:length(ID)){
phi = p.load1[i]*p.Att[i] + p.load2[i]*p.Att[i]
p.score[i] = rordlogit(1,phi,p.cutpoints)
}
plot(p.score)
table(p.score,Item, Factor)
barplot(table(p.score,Item,Factor)[,,1])
barplot(table(Score,Item,Factor)[,,1])
barplot(table(p.score,Item,Factor)[,,1])
barplot(table(p.score,Item,Factor)[,,2])
barplot(table(p.score,Item,Factor)[,,2])
barplot(table(Score,Item,Factor)[,,2])
barplot(table(p.score,Item,Factor)[,,2])
table(p.score,Item, Factor)
mfrow((c(1,2)))
mar(mfrow((c(1,2))))
par(mfrow((c(1,2))))
par(mfrow=c(1,2))
barplot(table(Score,Item,Factor)[,,1])
barplot(table(p.score,Item,Factor)[,,1])
par(mfrow=c(1,2))
barplot(table(Score,Item,Factor)[,,1],main="Synthetic Data")
barplot(table(p.score,Item,Factor)[,,1],main="Predicted Data")
barplot(table(Score,Item,Factor)[,,2],main="Synthetic Data"))
barplot(table(Score,Item,Factor)[,,2],main="Synthetic Data"))
barplot(table(Score,Item,Factor)[,,2],main="Synthetic Data")
barplot(table(p.score,Item,Factor)[,,2],main="Predicted Data")
par(mfrow=c(1,2))
barplot(table(Score,Item,Factor)[,,1],main="Factor 1 Synthetic Data")
barplot(table(p.score,Item,Factor)[,,1],main="Factor 1 Predicted Data")
# Plot Factor 2 Item loadings
barplot(table(Score,Item,Factor)[,,2],main="Factor 2 Synthetic Data")
barplot(table(p.score,Item,Factor)[,,2],main="Factor 2 Predicted Data")
ID2 <- rep(1:n)
# Distance data for each mode. Lognormal is runing into problems
Dist_D <- rlnorm(n,meanlog=1,sdlog=1)
Dist_B <- Dist_D - (.25*Dist_D)
Dist_W <- Dist_D - (.5*Dist_D)
Dist_Bu <- Dist_D + (.25*Dist_D)
Dist_O <- Dist_D + (.1*Dist_D)
# Ordered bike environment variable
Bike_Env <- rordlogit(n,1.5,1:3)
# Parent education > BA degree
Parent_Ed <- rbinom(n,1,.5)
# School ID, for later use
School <- rep(1:2,each=(n/2))
# Each mode specific linear model
score_D <- -1*Dist_D + 2*Parent_Ed
score_B <- -2*Dist_B + .5*Parent_Ed + .5*Bike_Env
score_W <- -2.2*Dist_W + 1*Parent_Ed
score_Bu <- -2*Dist_Bu + 2*Parent_Ed
score_O <- -1*Dist_O + 1*Parent_Ed
# convert scores to probabilities
p <- softmax(score_D, score_B, score_W, score_Bu, score_O)
# now simulate choice
Mode <- rep(NA,n)
# sample mode for each individual
for ( i in 1:n ){
Mode[i] <- sample( 1:5 , size=1 , prob=p[i,] )
}
hist(Mode)
m.mnl_comp <- map2stan(
alist(
Mode ~ dcategorical(softmax(0,bike,walk,bus,other)),
bike <- a_b + b_bdist*Dist_B + b_bPE*Parent_Ed + b_bBE*Bike_Env,
walk <- a_w + b_wdist*Dist_W + b_wPE*Parent_Ed,
bus <- a_bu + b_budist*Dist_Bu + b_buPE*Parent_Ed,
other <- a_o + b_odist*Dist_O + b_oPE*Parent_Ed,
c(a_b,a_w,a_bu,a_o) ~ dnorm(0,10),
c(b_bdist,b_bPE,b_bBE,b_wdist,b_wPE,b_budist,b_buPE,b_odist,b_oPE) ~ dnorm(0,1)
),
data = list(Mode=Mode,Dist_B=Dist_B,Dist_W=Dist_W,Dist_Bu=Dist_Bu,
Dist_O=Dist_O,Parent_Ed=Parent_Ed,Bike_Env=Bike_Env),
iter=2, warmup=1
)
m.mnl <- resample(m.mnl_comp,iter=2000,warmup=500)
precis(m.mnl)
sim(m.mnl)
pred <- sim(m.mnl)
str(pred)
